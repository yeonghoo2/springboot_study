apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  hub: ${awsAccount}.dkr.ecr.ap-northeast-2.amazonaws.com/istio
  components:
    ingressGateways:
      - name: internal-istio-ingressgateway
        enabled: true
      - namespace: istio-system
        name: internal-istio-ingressgateway
        enabled: true
        k8s:
          serviceAnnotations:
            service.beta.kubernetes.io/aws-load-balancer-internal: "true"
            service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${arnCert}
            service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "${policy}"
            # service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
            service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
            service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
            service.beta.kubernetes.io/aws-load-balancer-access-log-enabled: "false"
            # service.beta.kubernetes.io/aws-load-balancer-access-log-emit-interval: "60"
            # service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-name: "my-bucket"
            # service.beta.kubernetes.io/aws-load-balancer-access-log-s3-bucket-prefix: "my-bucket-prefix/logs"
            service.beta.kubernetes.io/aws-load-balancer-security-groups: "${seucirygroupId}"
            # service.beta.kubernetes.io/aws-load-balancer-extra-security-groups: "${securitygoupdId}"  # CDN edge ip
            service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "10"
            service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
          service:
            ports:
            - name: status-port
              port: 15021
              targetPort: 15021
            - name: http2
              port: 80
              targetPort: 8080
            - name: https
              port: 443
              targetPort: 8443
            - name: tls
              port: 15443
              targetPort: 15443
          overlays:
            - kind: HorizontalPodAutoscaler
              name: internal-istio-ingressgateway
              patches:
                - path: metadata.labels.app
                  value: internal-istio-ingressgateway
                - path: metadata.labels.istio
                  value: internal-ingressgateway
                - path: spec.scaleTargetRef.name
                  value: internal-istio-ingressgateway
            - kind: Deployment
              name: internal-istio-ingressgateway
              patches:
                - path: metadata.labels.app
                  value: internal-istio-ingressgateway
                - path: metadata.labels.istio
                  value: internal-ingressgateway
                - path: spec.selector.matchLabels.app
                  value: internal-istio-ingressgateway
                - path: spec.selector.matchLabels.istio
                  value: internal-ingressgateway
                - path: spec.template.metadata.labels.app
                  value: internal-istio-ingressgateway
                - path: spec.template.metadata.labels.istio
                  value: internal-ingressgateway
            - kind: Service
              name: internal-istio-ingressgateway
              patches:
                - path: metadata.labels.app
                  value: internal-istio-ingressgateway
                - path: metadata.labels.istio
                  value: internal-ingressgateway
                - path: spec.selector.app
                  value: internal-istio-ingressgateway
                - path: spec.selector.istio
                  value: internal-ingressgateway